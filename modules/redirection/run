#!/bin/bash

function	pre_exec_redirection()
{
	echo_log_sect "redirection"
	TMP_FILE_IN=${TEST_DIR}/infile
	echo "Seekers" > ${TMP_FILE_IN}
	TMP_CHMOD_000=${TEST_DIR}/chmoded
	echo "Seekers" > ${TMP_CHMOD_000}
	chmod 000 ${TMP_CHMOD_000}
	TMP_DIR_USER=${TEST_DIR}/expect_user
	TMP_DIR_BASH=${TEST_DIR}/expect_bash
	clean_test_dir
	for n in {01..03}; do
		TMP_FILE+=(file_${n})
		TMP_FILE_USER+=(${TMP_DIR_USER/${DIR_BASE}\//}/${TMP_FILE[${#TMP_FILE[@]} - 1]})
		TMP_FILE_BASH+=(${TMP_DIR_BASH/${DIR_BASE}\//}/${TMP_FILE[${#TMP_FILE[@]} - 1]})
		TMP_FILE_REPL+=($(cat /dev/urandom | xxd -p -l 3 -g 8))
	done
	EXEC_MODE=3
	# EXEC_DISABLE_DIFF=1
	return 0
}

function	exec_redirection()
{
	exec_command "echo pass > ${TMP_FILE_REPL[0]}"
	exec_command "< ${TMP_FILE_IN} cat | < ${TMP_FILE_IN} cat"
	exec_command "< ${TMP_FILE_IN} cat > ${TMP_FILE_REPL[1]} | < ${TMP_FILE_IN} cat"
	exec_command "< ${TMP_FILE_IN} cat > ${TMP_FILE_REPL[1]} | < ${TMP_FILE_IN} cat >> ${TMP_FILE_REPL[2]}"
	exec_command "< ${TMP_FILE_IN} cat > ${TMP_FILE_REPL[1]} | < ${TMP_FILE_IN} cat >> ${TMP_FILE_REPL[2]}"
	exec_command "< ${TMP_FILE_IN} cat -e > ${TMP_FILE_REPL[0]} | < file_not_found grep a1 > ${TMP_FILE_REPL[1]}"
	exec_command "< ${TMP_FILE_IN} cat -e > ${TMP_FILE_REPL[0]} | < ${TMP_CHMOD_000} grep a1 > ${TMP_FILE_REPL[1]}"
	return 0
}

function	post_exec_redirection()
{
	# EXEC_DISABLE_DIFF=0
	EXEC_MODE=0
	return 0
}

# if not sourced, BASH_SOURCE keep current file when $0 keep launched file
if [ "${BASH_SOURCE[0]}" -ef "${0}" ]; then
	if [ "${0}" -ef "run" ]; then
		source ../../run
	elif [ "${0}" -ef "redirection/run" ]; then
		source ../run
	else
		source ./run
	fi
	pre_exec_redirection
	exec_redirection
	post_exec_redirection
fi
